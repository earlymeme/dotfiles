settings = {
  core = {
    write_buffer_size = "2MB";
    write_buffer_timeout = "2min";
    real_name = "Birunthan Mohanathas";
    user_name = "poiru";
    nick = "poiru";
    log_create_mode = "644";
    hostname = "lakka.kapsi.fi";
    resolve_prefer_ipv6 = "yes";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    scroll_page_count = "/1.1";
    scroll = "yes";
    scrollback_time = "4d";
    paste_verify_line_count = "1";
    scrollback_lines = "2000";
  };
  "fe-common/core" = {
    autolog = "no";
    autolog_path = "~/irclogs/$0.%Y-%m-%d.log";
    autolog_level = "msgs public";
    show_names_on_join = "no";
    hide_server_tags = "yes";
    show_nickmode = "yes";
    theme = "default";
    activity_hide_level = "QUITS JOINS PARTS NICKS";
    window_history = "yes";
    hilight_color = "%b";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    beep_when_window_active = "yes";
    bell_beeps = "yes";
    beep_when_away = "yes";
    hilight_act_color = "%Y";
    hide_colors = "no";
    max_command_history = "100";
    hilight_nick_matches = "no";
    emphasis_multiword = "yes";
    activity_hilight_level = "MSGS DCCMSGS";
  };
  "irc/core" = { alternate_nick = "poiru_"; skip_motd = "yes"; };
  "perl/core/scripts" = {
    neat_left_messages = "no";
    neat_left_actions = "yes";
    neat_maxlength = "8";
    neat_ignorechars = "[_][|]";
    neat_right_mode = "no";
    neat_colors = "rRgGyYbBmMcC";
    screenscroll_detach = "QUITS PARTS JOINS";
    screenscroll_reattach = "-QUITS -PARTS -JOINS";
    screencmd_detach = "^set scroll off; ^ignore * QUITS PARTS JOINS; ^ignore #tkt-salaliitto -QUITS -PARTS -JOINS";
    screencmd_attach = "^set scroll on; ^ignore #tkt-salaliitto -QUITS -PARTS -JOINS";
    neat_allow_shrinking = "yes";
    neat_colorize = "yes";
  };
  "irc/flood" = { autoignore_level = ""; };
};

servers = (
  {
    address = "irc.nebula.fi";
    chatnet = "IRCnet";
    port = "6667";
    own_host = "kapsi.fi";
    family = "inet";
    autoconnect = "yes";
  },
  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "irc.mozilla.org";
    chatnet = "Mozilla";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  Freenode = { type = "IRC"; };
  Mozilla = { type = "IRC"; };
};

channels = ();

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  EXIT = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "window";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  BANS = "ban";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  RELOADTHEME = "script exec Irssi::themes_reload();";
  seen = "/msg -Mozilla firebot seen";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        #time = { };
        #user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "inactive";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };
  };
};
logs = {};
hilights = (
  { text = "poiru"; color = "%8%c"; nick = "no"; word = "yes"; },
  { text = "biru"; color = "%8%c"; nick = "no"; word = "yes"; }
);
ignores = ();
keyboard = (
  { key = "meta-e"; id = "command"; data = "window goto active"; },
  { key = "meta-q"; id = "command"; data = "scrollback end"; },
  { key = "meta-w"; id = "command"; data = "window last"; }
);
windows = {};
mainwindows = { 1 = { first_line = "0"; lines = "38"; }; };
